{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Goal: Take in the breast cancer set, use PCA to reduce the components. Visualise the results and then apply two different machine learning models to see which would be better\n",
    "Steps\n",
    "1. Read in data set\n",
    "2. Standardise the data\n",
    "3. Use PCA to reduce down\n",
    "4. Data viz\n",
    "5. Apply Random Forest model\n",
    "6. Apply Logistical Regression model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "sns.set_style('darkgrid')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The data set is a part of sklearn datasets package"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from sklearn.datasets import load_breast_cancer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "cancer = load_breast_cancer()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['data', 'target', 'target_names', 'DESCR', 'feature_names'])"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cancer.keys()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Converting it into a dataframe using the keys we just found out"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df = pd.DataFrame(data=cancer['data'],columns=cancer['feature_names'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mean radius</th>\n",
       "      <th>mean texture</th>\n",
       "      <th>mean perimeter</th>\n",
       "      <th>mean area</th>\n",
       "      <th>mean smoothness</th>\n",
       "      <th>mean compactness</th>\n",
       "      <th>mean concavity</th>\n",
       "      <th>mean concave points</th>\n",
       "      <th>mean symmetry</th>\n",
       "      <th>mean fractal dimension</th>\n",
       "      <th>...</th>\n",
       "      <th>worst radius</th>\n",
       "      <th>worst texture</th>\n",
       "      <th>worst perimeter</th>\n",
       "      <th>worst area</th>\n",
       "      <th>worst smoothness</th>\n",
       "      <th>worst compactness</th>\n",
       "      <th>worst concavity</th>\n",
       "      <th>worst concave points</th>\n",
       "      <th>worst symmetry</th>\n",
       "      <th>worst fractal dimension</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>17.99</td>\n",
       "      <td>10.38</td>\n",
       "      <td>122.80</td>\n",
       "      <td>1001.0</td>\n",
       "      <td>0.11840</td>\n",
       "      <td>0.27760</td>\n",
       "      <td>0.3001</td>\n",
       "      <td>0.14710</td>\n",
       "      <td>0.2419</td>\n",
       "      <td>0.07871</td>\n",
       "      <td>...</td>\n",
       "      <td>25.38</td>\n",
       "      <td>17.33</td>\n",
       "      <td>184.60</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>0.1622</td>\n",
       "      <td>0.6656</td>\n",
       "      <td>0.7119</td>\n",
       "      <td>0.2654</td>\n",
       "      <td>0.4601</td>\n",
       "      <td>0.11890</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20.57</td>\n",
       "      <td>17.77</td>\n",
       "      <td>132.90</td>\n",
       "      <td>1326.0</td>\n",
       "      <td>0.08474</td>\n",
       "      <td>0.07864</td>\n",
       "      <td>0.0869</td>\n",
       "      <td>0.07017</td>\n",
       "      <td>0.1812</td>\n",
       "      <td>0.05667</td>\n",
       "      <td>...</td>\n",
       "      <td>24.99</td>\n",
       "      <td>23.41</td>\n",
       "      <td>158.80</td>\n",
       "      <td>1956.0</td>\n",
       "      <td>0.1238</td>\n",
       "      <td>0.1866</td>\n",
       "      <td>0.2416</td>\n",
       "      <td>0.1860</td>\n",
       "      <td>0.2750</td>\n",
       "      <td>0.08902</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>19.69</td>\n",
       "      <td>21.25</td>\n",
       "      <td>130.00</td>\n",
       "      <td>1203.0</td>\n",
       "      <td>0.10960</td>\n",
       "      <td>0.15990</td>\n",
       "      <td>0.1974</td>\n",
       "      <td>0.12790</td>\n",
       "      <td>0.2069</td>\n",
       "      <td>0.05999</td>\n",
       "      <td>...</td>\n",
       "      <td>23.57</td>\n",
       "      <td>25.53</td>\n",
       "      <td>152.50</td>\n",
       "      <td>1709.0</td>\n",
       "      <td>0.1444</td>\n",
       "      <td>0.4245</td>\n",
       "      <td>0.4504</td>\n",
       "      <td>0.2430</td>\n",
       "      <td>0.3613</td>\n",
       "      <td>0.08758</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>11.42</td>\n",
       "      <td>20.38</td>\n",
       "      <td>77.58</td>\n",
       "      <td>386.1</td>\n",
       "      <td>0.14250</td>\n",
       "      <td>0.28390</td>\n",
       "      <td>0.2414</td>\n",
       "      <td>0.10520</td>\n",
       "      <td>0.2597</td>\n",
       "      <td>0.09744</td>\n",
       "      <td>...</td>\n",
       "      <td>14.91</td>\n",
       "      <td>26.50</td>\n",
       "      <td>98.87</td>\n",
       "      <td>567.7</td>\n",
       "      <td>0.2098</td>\n",
       "      <td>0.8663</td>\n",
       "      <td>0.6869</td>\n",
       "      <td>0.2575</td>\n",
       "      <td>0.6638</td>\n",
       "      <td>0.17300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>20.29</td>\n",
       "      <td>14.34</td>\n",
       "      <td>135.10</td>\n",
       "      <td>1297.0</td>\n",
       "      <td>0.10030</td>\n",
       "      <td>0.13280</td>\n",
       "      <td>0.1980</td>\n",
       "      <td>0.10430</td>\n",
       "      <td>0.1809</td>\n",
       "      <td>0.05883</td>\n",
       "      <td>...</td>\n",
       "      <td>22.54</td>\n",
       "      <td>16.67</td>\n",
       "      <td>152.20</td>\n",
       "      <td>1575.0</td>\n",
       "      <td>0.1374</td>\n",
       "      <td>0.2050</td>\n",
       "      <td>0.4000</td>\n",
       "      <td>0.1625</td>\n",
       "      <td>0.2364</td>\n",
       "      <td>0.07678</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   mean radius  mean texture  mean perimeter  mean area  mean smoothness  \\\n",
       "0        17.99         10.38          122.80     1001.0          0.11840   \n",
       "1        20.57         17.77          132.90     1326.0          0.08474   \n",
       "2        19.69         21.25          130.00     1203.0          0.10960   \n",
       "3        11.42         20.38           77.58      386.1          0.14250   \n",
       "4        20.29         14.34          135.10     1297.0          0.10030   \n",
       "\n",
       "   mean compactness  mean concavity  mean concave points  mean symmetry  \\\n",
       "0           0.27760          0.3001              0.14710         0.2419   \n",
       "1           0.07864          0.0869              0.07017         0.1812   \n",
       "2           0.15990          0.1974              0.12790         0.2069   \n",
       "3           0.28390          0.2414              0.10520         0.2597   \n",
       "4           0.13280          0.1980              0.10430         0.1809   \n",
       "\n",
       "   mean fractal dimension           ...             worst radius  \\\n",
       "0                 0.07871           ...                    25.38   \n",
       "1                 0.05667           ...                    24.99   \n",
       "2                 0.05999           ...                    23.57   \n",
       "3                 0.09744           ...                    14.91   \n",
       "4                 0.05883           ...                    22.54   \n",
       "\n",
       "   worst texture  worst perimeter  worst area  worst smoothness  \\\n",
       "0          17.33           184.60      2019.0            0.1622   \n",
       "1          23.41           158.80      1956.0            0.1238   \n",
       "2          25.53           152.50      1709.0            0.1444   \n",
       "3          26.50            98.87       567.7            0.2098   \n",
       "4          16.67           152.20      1575.0            0.1374   \n",
       "\n",
       "   worst compactness  worst concavity  worst concave points  worst symmetry  \\\n",
       "0             0.6656           0.7119                0.2654          0.4601   \n",
       "1             0.1866           0.2416                0.1860          0.2750   \n",
       "2             0.4245           0.4504                0.2430          0.3613   \n",
       "3             0.8663           0.6869                0.2575          0.6638   \n",
       "4             0.2050           0.4000                0.1625          0.2364   \n",
       "\n",
       "   worst fractal dimension  \n",
       "0                  0.11890  \n",
       "1                  0.08902  \n",
       "2                  0.08758  \n",
       "3                  0.17300  \n",
       "4                  0.07678  \n",
       "\n",
       "[5 rows x 30 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Next I will standardise the data found in our data frame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import StandardScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "scaler = StandardScaler()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "StandardScaler(copy=True, with_mean=True, with_std=True)"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scaler.fit(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "scaled_data=scaler.transform(df)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The data is now scaled so we can use PCA to reduce the number of components"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from sklearn.decomposition import PCA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "pca = PCA(n_components=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PCA(copy=True, iterated_power='auto', n_components=2, random_state=None,\n",
       "  svd_solver='auto', tol=0.0, whiten=False)"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pca.fit(scaled_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "x_pca = pca.transform(scaled_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(569, 2)"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_pca.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's see what this data looks like"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x113526dd8>"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nIiJ+4g+AuzuTjqqkwQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a186da710>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8,6))\n",
    "plt.scatter(x_pca[:,0],x_pca[:,1],c=cancer['target'],cmap='rainbow')\n",
    "plt.xlabel('First Component')\n",
    "plt.ylabel('Second Component')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "First, let's evaluate the Logisitc Regression machine learning model on this data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(x_pca,cancer['target'],test_size=0.33)\n",
    "# The target classification lies in the original data set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "rfc=RandomForestClassifier()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',\n",
       "            max_depth=None, max_features='auto', max_leaf_nodes=None,\n",
       "            min_impurity_decrease=0.0, min_impurity_split=None,\n",
       "            min_samples_leaf=1, min_samples_split=2,\n",
       "            min_weight_fraction_leaf=0.0, n_estimators=10, n_jobs=1,\n",
       "            oob_score=False, random_state=None, verbose=0,\n",
       "            warm_start=False)"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rfc.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "predictions = rfc.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from sklearn.metrics import classification_report,confusion_matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 65   6]\n",
      " [ 10 107]]\n",
      "\n",
      "\n",
      "             precision    recall  f1-score   support\n",
      "\n",
      "          0       0.87      0.92      0.89        71\n",
      "          1       0.95      0.91      0.93       117\n",
      "\n",
      "avg / total       0.92      0.91      0.92       188\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(confusion_matrix(y_test,predictions))\n",
    "print('\\n')\n",
    "print(classification_report(y_test,predictions))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's see if the logistical regression model will be more or less accurate"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Our data is already split, so we can skip this step"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LogisticRegression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "lr = LogisticRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,\n",
       "          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,\n",
       "          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,\n",
       "          verbose=0, warm_start=False)"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lr.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "predictions_lr = lr.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 70   1]\n",
      " [  5 112]]\n",
      "\n",
      "\n",
      "             precision    recall  f1-score   support\n",
      "\n",
      "          0       0.93      0.99      0.96        71\n",
      "          1       0.99      0.96      0.97       117\n",
      "\n",
      "avg / total       0.97      0.97      0.97       188\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(confusion_matrix(y_test,predictions_lr))\n",
    "print('\\n')\n",
    "print(classification_report(y_test,predictions_lr))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# What we've discovered is that the Logistic Regression model is better at predicting this model than the Random Forest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
